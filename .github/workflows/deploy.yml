name: Deploy Flask App to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout your code
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Test locally (optional)
    - name: Test application
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -c "from app import app; print('✅ Flask app ready!')"

    # 3. Deploy to EC2
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Create deployment directory if it doesn't exist
          sudo mkdir -p /var/www/flask-app
          sudo chown ubuntu:ubuntu /var/www/flask-app
          cd /var/www/flask-app
          
          # Clone or update your repository
          if [ ! -d ".git" ]; then
            echo "Cloning repository..."
            git clone https://github.com/Doziechucks/CI-CD-pipleine.git .
          else
            echo "Pulling latest changes..."
            git pull origin main
          fi
          
          # Set up Python environment
          echo "Setting up Python environment..."
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install gunicorn
          
          # Create systemd service for Flask app
          if [ ! -f "/etc/systemd/system/flask-app.service" ]; then
            echo "Creating systemd service..."
            sudo tee /etc/systemd/system/flask-app.service > /dev/null << EOF
[Unit]
Description=Flask App
After=network.target

[Service]
User=ubuntu
WorkingDirectory=/var/www/flask-app
Environment="PATH=/var/www/flask-app/venv/bin"
ExecStart=/var/www/flask-app/venv/bin/gunicorn --workers 3 --bind 0.0.0.0:8080 app:app
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
EOF
            
            sudo systemctl daemon-reload
            sudo systemctl enable flask-app
          fi
          
          # Restart Flask app
          echo "Restarting Flask app..."
          sudo systemctl restart flask-app
          
          # Configure Nginx if not already configured
          if [ ! -f "/etc/nginx/sites-available/flask-app" ]; then
            echo "Configuring Nginx..."
            sudo tee /etc/nginx/sites-available/flask-app > /dev/null << EOF
server {
    listen 80;
    server_name _;

    location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF
            
            sudo ln -sf /etc/nginx/sites-available/flask-app /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
          fi
          
          # Restart Nginx
          sudo nginx -t && sudo systemctl restart nginx || echo "Nginx restart failed"
          
          # Health check
          sleep 3
          if curl -f http://localhost:8080/ > /dev/null 2>&1; then
            echo "✅ Deployment successful!"
          else
            echo " Health check failed"
            exit 1
          fi