    # 3. Deploy to EC2
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          set -e
          sudo mkdir -p /var/www/flask-app
          sudo chown ubuntu:ubuntu /var/www/flask-app
          cd /var/www/flask-app
          
          if [ ! -d ".git" ]; then
            git clone https://github.com/Doziechucks/CI-CD-pipleine.git .
          else
            git pull origin main
          fi
          
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install gunicorn
          
          # Create systemd service
          if [ ! -f "/etc/systemd/system/flask-app.service" ]; then
            cat > systemd-service << 'SERVICE_END'
[Unit]
Description=Flask App
After=network.target

[Service]
User=ubuntu
WorkingDirectory=/var/www/flask-app
Environment="PATH=/var/www/flask-app/venv/bin"
ExecStart=/var/www/flask-app/venv/bin/gunicorn --workers 3 --bind 0.0.0.0:8080 app:app
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
SERVICE_END
            sudo mv systemd-service /etc/systemd/system/flask-app.service
            sudo systemctl daemon-reload
            sudo systemctl enable flask-app
          fi
          
          sudo systemctl restart flask-app
          
          # Create nginx config
          if [ ! -f "/etc/nginx/sites-available/flask-app" ]; then
            cat > nginx-config << 'NGINX_END'
server {
    listen 80;
    server_name _;

    location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
NGINX_END
            sudo mv nginx-config /etc/nginx/sites-available/flask-app
            sudo ln -sf /etc/nginx/sites-available/flask-app /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
          fi
          
          sudo nginx -t && sudo systemctl restart nginx || echo "Nginx restart failed"
          
          sleep 3
          curl -f http://localhost:8080/ && echo "âœ… Deployment successful!" || { echo "Health check failed"; exit 1; }