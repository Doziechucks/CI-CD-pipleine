- name: Deploy via SSH
  uses: appleboy/ssh-action@v1.0.3
  with:
    host: ${{ secrets.EC2_HOST }}
    username: ${{ secrets.EC2_USER }}
    key: ${{ secrets.EC2_KEY }}
    script: |
      set -e
      APP_DIR=~/app
      SERVICE_NAME=myapp
      REPO_URL=https://github.com/Doziechucks/CI-CD-pipeline.git
      VENV_DIR=$APP_DIR/venv
      
      echo "🚀 Starting deployment..."
      
      # Create app directory
      mkdir -p $APP_DIR
      cd $APP_DIR

      # Install system dependencies
      echo "📦 Installing system dependencies..."
      sudo apt update
      sudo apt install -y python3-venv python3-pip git

      # Clone or update repository
      echo "📥 Updating repository..."
      if [ -d .git ]; then
        git reset --hard
        git pull
      else
        git clone $REPO_URL .
      fi

      # Set up virtual environment
      echo "🐍 Setting up virtual environment..."
      if [ ! -d "$VENV_DIR" ]; then
        python3 -m venv $VENV_DIR
      fi

      source $VENV_DIR/bin/activate

      # Install Python dependencies
      echo "📦 Installing Python dependencies..."
      pip install --upgrade pip
      pip install -r requirements.txt

      # Test the application
      echo "🧪 Testing application..."
      python -c "from app import app; print('✅ Flask app imported successfully!')"

      # Create systemd service using tee
      echo "⚙️  Creating systemd service..."
      if [ ! -f /etc/systemd/system/$SERVICE_NAME.service ]; then
        sudo tee /etc/systemd/system/$SERVICE_NAME.service > /dev/null <<EOF
[Unit]
Description=Flask App
After=network.target

[Service]
User=ubuntu
WorkingDirectory=$$APP_DIR
Environment="PATH=$$VENV_DIR/bin"
ExecStart=$$VENV_DIR/bin/gunicorn -b 0.0.0.0:8080 app:app
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
        sudo systemctl daemon-reload
        sudo systemctl enable $SERVICE_NAME
      fi

      # Restart and check service
      echo "🔄 Restarting service..."
      sudo systemctl restart $SERVICE_NAME
      sleep 3
      echo "📊 Service status:"
      sudo systemctl status $SERVICE_NAME --no-pager
      
      # Health check
      echo "🔍 Health check..."
      if curl -f http://localhost:8080/ > /dev/null 2>&1; then
        echo "✅ Application is responding!"
      else
        echo "⚠️  Application health check failed"
      fi
      
      echo "🎉 Deployment completed successfully!"